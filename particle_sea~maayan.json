{"stamps":[{"id":"5azwp3fpa","name":"style.css","code":"\nhtml, body {\n  margin: 0;\n  padding: 0;\n}","args":" ","x":268.53419986245996,"y":177.7984650004281,"editorWidth":225,"editorHeight":175,"iframeWidth":0,"iframeHeight":0,"isIndex":false,"isTxtFile":true,"isMediaFile":false,"hidden":true,"exported":true,"zIndex":642,"isBlob":false,"codeSize":14,"icon":"./static/media/file.5bd43cb8.svg","lineHighLightingStatus":"none"},{"id":"9j7p1zqrj","name":"index.html","code":"<html>\n  <head>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/p5.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.dom.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/p5.js/0.7.1/addons/p5.sound.min.js\"></script>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n  </head>\n  <body>\n    <script src='sketch.js'></script>\n  </body>\n</html>\n","args":" ","x":309.13872819066705,"y":148.12237211435783,"editorWidth":225,"editorHeight":175,"iframeWidth":200,"iframeHeight":200,"isIndex":true,"isTxtFile":false,"isMediaFile":false,"hidden":true,"exported":true,"zIndex":641,"isBlob":false,"codeSize":14,"icon":"./static/media/layout.8a437d55.svg","lineHighLightingStatus":"none"},{"id":"66wlwx3o0","name":"//  Mutual repu...","code":"//  Mutual repulsion, with optional gravity","args":" ","x":262.7002420243676,"y":206.43838195550427,"editorWidth":200,"editorHeight":200,"iframeWidth":0,"iframeHeight":0,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":102,"isBlob":true,"codeSize":14,"icon":"./static/media/globe.50d70b6d.svg","lineHighLightingStatus":"none"},{"id":"mbooyu1ed","name":"var myParticles...","code":"var myParticles = [];\nvar nParticles = 250;\nvar maxRadius = 120\nvar clicked = false;\nvar margin = 20\nvar oldMouseX = 0\nvar oldMouseY = 0\nvar count = 0","args":" ","x":524.7002420243675,"y":206.43838195550427,"editorWidth":200,"editorHeight":200,"iframeWidth":0,"iframeHeight":0,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":103,"isBlob":true,"codeSize":14,"icon":"./static/media/globe.50d70b6d.svg","lineHighLightingStatus":"none"},{"id":"wg9nj3qg0","name":"setup","code":"\n    createCanvas(710, 400);\n    noStroke()\n \n    for (var i = 0; i < nParticles; i++) {\n        var radius = random(0, maxRadius)\n        var angle = random(0, TWO_PI)\n        var rx = cos(angle)* radius + width/2\n        var ry = sin(angle) * radius + height/2\n        myParticles[i] = new Particle(random(5, 7));\n        myParticles[i].set(rx, ry);\n    }\n","args":"","x":1085.5692931273632,"y":157.09156146710987,"editorWidth":524.5117384631534,"editorHeight":375,"iframeWidth":292.7706219759461,"iframeHeight":246.022491443504,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":115,"isBlob":false,"codeSize":14,"icon":"./static/media/tool.d68b9b61.svg","lineHighLightingStatus":"none"},{"id":"30yerg5h2","name":"keyPressed","code":"\n    for (var i = 0; i < myParticles.length; i++) {\n        myParticles[i].px = random(width);\n        myParticles[i].py = random(height);\n    }\n","args":"","x":1130.0475349624653,"y":753.9596706356726,"editorWidth":200,"editorHeight":375,"iframeWidth":710,"iframeHeight":400,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":122,"isBlob":false,"codeSize":14,"icon":"./static/media/bell.86facacc.svg","lineHighLightingStatus":"none"},{"id":"6zw9hr75p","name":"draw","code":"\n  if(oldMouseX == mouseX && oldMouseY == mouseY){\n    count += 1\n  }else{count = 0}\n\n    background(255);\n \n    var gravityForcex = 0;\n    var gravityForcey = 0.05;\n    var mutualRepulsionAmount = .5;\n    var mouseMutualRepulsionAmount = 500;\n \n \n    for (var i = 0; i < myParticles.length; i++) {\n        var ithParticle = myParticles[i];\n        var px = ithParticle.px;\n        var py = ithParticle.py;\n \n \n        for (var j = 0; j < i; j++) {\n            var jthParticle = myParticles[j];\n            var qx = jthParticle.px;\n            var qy = jthParticle.py;\n \n            var dx = px - qx;\n            var dy = py - qy;\n            var dh = sqrt(dx*dx + dy*dy);\n            if (dh > 1.0) {\n                 \n                var componentInX = dx/dh;\n                var componentInY = dy/dh;\n                var proportionToDistanceSquared = 1.0/(dh*dh);\n                 \n                var repulsionForcex = mutualRepulsionAmount * componentInX * proportionToDistanceSquared;\n                var repulsionForcey = mutualRepulsionAmount * componentInY * proportionToDistanceSquared;\n \n                ithParticle.addForce( repulsionForcex,  repulsionForcey); // add in forces\n                jthParticle.addForce(-repulsionForcex, -repulsionForcey); // add in forces\n            }\n        }\n\n        var dMouseX = px - mouseX\n        var dMouseY = py - mouseY\n        var dMouse = sqrt(dMouseX**2 + dMouseY**2);\n\n        if (dMouse < 400 && dMouse > 8) {\n\n          var mouseComponentInX = dMouseX/dMouse;\n          var mouseComponentInY = dMouseY/dMouse;\n          var mouseProportionToDistanceSquared = 1.0/(dMouse**2);\n                 \n          var mouseRepulsionForcex = (mouseMutualRepulsionAmount) * mouseComponentInX * mouseProportionToDistanceSquared;\n          var mouseRepulsionForcey = (mouseMutualRepulsionAmount) * mouseComponentInY * mouseProportionToDistanceSquared;\n \n          if(count < 200){\n            ithParticle.addForce(-mouseRepulsionForcex, -mouseRepulsionForcey);\n\n  \n          }else{\n          }\n        }else{\n        }\n\n\n    }\n    for (var i = 0; i < myParticles.length; i++) {\n        myParticles[i].bPeriodicBoundaries = false;\n        myParticles[i].bElasticBoundaries = true;\n\n\n        myParticles[i].update();\n    }\n \n    for (var i = 0; i < myParticles.length; i++) {\n        myParticles[i].render(); // draw all particles\n    }\n  \n    fill(200, 200, 200); \n    noStroke();\n    textSize(20);\n    textFont('Avenir')\n\n    if(clicked == false){\n      text(\"Mouse over a dot!\", margin* 12+ width/2 - 60 ,height/2);\n    }\n\n  oldMouseX = mouseX\n  oldMouseY = mouseY\n","args":"","x":-101.56529982635635,"y":1247.8310882359383,"editorWidth":312.6522058606988,"editorHeight":375,"iframeWidth":783.502772962097,"iframeHeight":496.9248924564975,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":124,"isBlob":false,"codeSize":14,"icon":"./static/media/tool.d68b9b61.svg","lineHighLightingStatus":"none"},{"id":"ccd7er1ks","name":"Particle","code":"\n  this.px=0;\n  this.py=0;\n  this.vx=0;\n  this.vy=0;\n  this.damping=0.96;\n  this.mass=1.0;\n  this.bLimitVelocities=true;\n  this.bPeriodicBoundaries=false;\n  this.bElasticBoundaries=true;\n  this.size = size\n\n\n  this.set=function(x,y){\n    this.px=x;\n    this.py=y;\n    this.vx=0;\n    this.vy=0;\n    this.damping=0.96;\n    this.mass=1.0;\n  }\n  \n  this.addForce=function(fx,fy){\n    ax=fx/this.mass;\n    ay=fy/this.mass;\n    this.vx+=ax;\n    this.vy+=ay;\n  }\n\n  this.update=function(){\n    this.vx*=this.damping;\n    this.vy*=this.damping;\n    this.limitVelocities();\n    this.handleBoundaries();\n    this.px+=this.vx;this.py+=this.vy;\n  }\n\n  this.limitVelocities=function(){\n    if(this.bLimitVelocities){\n      var speed=sqrt(this.vx*this.vx+this.vy*this.vy);\n      var maxSpeed=10;\n      if(speed>maxSpeed){\n        this.vx*=maxSpeed/speed;this.vy*=maxSpeed/speed;\n      }\n    }\n  }\n\n  this.inBounds=function(){\n    return(this.px<width&&this.px>0&&this.py<height&&this.py>0);\n  }\n\n  this.handleBoundaries=function(){\n    var distanceFromCenter = getDistance(width/2, height/2, this.px, this.py)\n    // if(distanceFromCenter > maxRadius){\n    //   this.px = this.px * .999 + width/2 * .001\n    //   this.py = this.py * .999 + height/2 * .001\n    // }\n    // if(distanceFromCenter > maxRadius){\n    //   if(this.px>width/2 + maxRadius)this.vx=-this.vx;\n    //   if(this.px<width/2 - maxRadius)this.vx=-this.vx;\n    //   if(this.py>height/2 + maxRadius)this.vy=-this.vy;\n    //   if(this.py<height/2 - maxRadius)this.vy=-this.vy;      \n    // }\n\n    // if(distanceFromCenter > maxRadius){\n    //   if(this.px>width/2 + maxRadius)this.px-=maxRadius* 2;\n    //   if(this.px<width/2 - maxRadius)this.px+=maxRadius* 2;\n    //   if(this.py>height/2 + maxRadius)this.py-=maxRadius * 2;\n    //   if(this.py<height/2 - maxRadius)this.py+=maxRadius * 2;     \n    // }\n    if(this.bPeriodicBoundaries){\n      if(this.px>width)this.px-=width;\n      if(this.px<0)this.px+=width;\n      if(this.py>height)this.py-=height;\n      if(this.py<0)this.py+=height;\n    }else if(this.bElasticBoundaries){\n      if(this.px>width)this.vx=-this.vx;\n      if(this.px<0)this.vx=-this.vx;\n      if(this.py>height)this.vy=-this.vy;\n      if(this.py<0)this.vy=-this.vy;\n    }\n  }\n  this.render=function(size){\n    var distance = getDistance(mouseX, mouseY, this.px, this.py)\n    var factor = map(distance, 0, 75, 3, 1)\n    if(distance >= 75){\n      var size = this.size + log(abs(this.vx) * 50)\n    }else{\n      clicked = true\n      var size = (this.size + log(abs(this.vx) * 50)) * factor\n    }\n    var opacity = map(size, 0, 40, 100, 255)\n\n    // var opacity = map(size, 0, 100, 3, 1)\n    fill(132, 0, 248, opacity)\n\n    ellipse(this.px,this.py,size,size);\n  }\n","args":"size","x":262.7002420243676,"y":2171.438381955504,"editorWidth":200,"editorHeight":375,"iframeWidth":710,"iframeHeight":400,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":110,"isBlob":false,"codeSize":14,"icon":"./static/media/box.310d8273.svg","lineHighLightingStatus":"none"},{"id":"a9ctgwkt9","name":"getDistance","code":"\n  return sqrt((x1 - x2)**2 + (y1 - y2)**2)\n","args":"x1, y1, x2, y2","x":262.7002420243676,"y":2726.438381955504,"editorWidth":200,"editorHeight":375,"iframeWidth":710,"iframeHeight":400,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":111,"isBlob":false,"codeSize":14,"icon":"./static/media/box.310d8273.svg","lineHighLightingStatus":"none"},{"id":"ynfprwbu0","name":"var print;","code":"var print;","args":" ","x":141.78023113326358,"y":911.0195780321116,"editorWidth":200,"editorHeight":200,"iframeWidth":0,"iframeHeight":0,"isIndex":false,"isTxtFile":false,"isMediaFile":false,"hidden":false,"exported":true,"zIndex":123,"isBlob":true,"codeSize":14,"icon":"./static/media/globe.50d70b6d.svg","lineHighLightingStatus":"none"}],"scale":0.37252492859959585,"originX":394.1195405611577,"originY":-155.26625217411947,"worldKey":"particle_sea~maayan","worldEdited":true,"worldPublishTime":"Sat Feb 15 2020 16:19:03 GMT-0800 (Pacific Standard Time)","snapToGrid":false,"linesOn":true,"js":"\n//  Mutual repulsion, with optional gravity\n\n\n\nvar myParticles = [];\nvar nParticles = 250;\nvar maxRadius = 120\nvar clicked = false;\nvar margin = 20\nvar oldMouseX = 0\nvar oldMouseY = 0\nvar count = 0\n\n\nfunction setup(){\n  \n      createCanvas(710, 400);\n      noStroke()\n   \n      for (var i = 0; i < nParticles; i++) {\n          var radius = random(0, maxRadius)\n          var angle = random(0, TWO_PI)\n          var rx = cos(angle)* radius + width/2\n          var ry = sin(angle) * radius + height/2\n          myParticles[i] = new Particle(random(5, 7));\n          myParticles[i].set(rx, ry);\n      }\n  \n}\n\nfunction keyPressed(){\n  \n      for (var i = 0; i < myParticles.length; i++) {\n          myParticles[i].px = random(width);\n          myParticles[i].py = random(height);\n      }\n  \n}\n\nfunction draw(){\n  \n    if(oldMouseX == mouseX && oldMouseY == mouseY){\n      count += 1\n    }else{count = 0}\n  \n      background(255);\n   \n      var gravityForcex = 0;\n      var gravityForcey = 0.05;\n      var mutualRepulsionAmount = .5;\n      var mouseMutualRepulsionAmount = 500;\n   \n   \n      for (var i = 0; i < myParticles.length; i++) {\n          var ithParticle = myParticles[i];\n          var px = ithParticle.px;\n          var py = ithParticle.py;\n   \n   \n          for (var j = 0; j < i; j++) {\n              var jthParticle = myParticles[j];\n              var qx = jthParticle.px;\n              var qy = jthParticle.py;\n   \n              var dx = px - qx;\n              var dy = py - qy;\n              var dh = sqrt(dx*dx + dy*dy);\n              if (dh > 1.0) {\n                   \n                  var componentInX = dx/dh;\n                  var componentInY = dy/dh;\n                  var proportionToDistanceSquared = 1.0/(dh*dh);\n                   \n                  var repulsionForcex = mutualRepulsionAmount * componentInX * proportionToDistanceSquared;\n                  var repulsionForcey = mutualRepulsionAmount * componentInY * proportionToDistanceSquared;\n   \n                  ithParticle.addForce( repulsionForcex,  repulsionForcey); // add in forces\n                  jthParticle.addForce(-repulsionForcex, -repulsionForcey); // add in forces\n              }\n          }\n  \n          var dMouseX = px - mouseX\n          var dMouseY = py - mouseY\n          var dMouse = sqrt(dMouseX**2 + dMouseY**2);\n  \n          if (dMouse < 400 && dMouse > 8) {\n  \n            var mouseComponentInX = dMouseX/dMouse;\n            var mouseComponentInY = dMouseY/dMouse;\n            var mouseProportionToDistanceSquared = 1.0/(dMouse**2);\n                   \n            var mouseRepulsionForcex = (mouseMutualRepulsionAmount) * mouseComponentInX * mouseProportionToDistanceSquared;\n            var mouseRepulsionForcey = (mouseMutualRepulsionAmount) * mouseComponentInY * mouseProportionToDistanceSquared;\n   \n            if(count < 200){\n              ithParticle.addForce(-mouseRepulsionForcex, -mouseRepulsionForcey);\n  \n    \n            }else{\n            }\n          }else{\n          }\n  \n  \n      }\n      for (var i = 0; i < myParticles.length; i++) {\n          myParticles[i].bPeriodicBoundaries = false;\n          myParticles[i].bElasticBoundaries = true;\n  \n  \n          myParticles[i].update();\n      }\n   \n      for (var i = 0; i < myParticles.length; i++) {\n          myParticles[i].render(); // draw all particles\n      }\n    \n      fill(200, 200, 200); \n      noStroke();\n      textSize(20);\n      textFont('Avenir')\n  \n      if(clicked == false){\n        text(\"Mouse over a dot!\", margin* 12+ width/2 - 60 ,height/2);\n      }\n  \n    oldMouseX = mouseX\n    oldMouseY = mouseY\n  \n}\n\nfunction Particle(size){\n  \n    this.px=0;\n    this.py=0;\n    this.vx=0;\n    this.vy=0;\n    this.damping=0.96;\n    this.mass=1.0;\n    this.bLimitVelocities=true;\n    this.bPeriodicBoundaries=false;\n    this.bElasticBoundaries=true;\n    this.size = size\n  \n  \n    this.set=function(x,y){\n      this.px=x;\n      this.py=y;\n      this.vx=0;\n      this.vy=0;\n      this.damping=0.96;\n      this.mass=1.0;\n    }\n    \n    this.addForce=function(fx,fy){\n      ax=fx/this.mass;\n      ay=fy/this.mass;\n      this.vx+=ax;\n      this.vy+=ay;\n    }\n  \n    this.update=function(){\n      this.vx*=this.damping;\n      this.vy*=this.damping;\n      this.limitVelocities();\n      this.handleBoundaries();\n      this.px+=this.vx;this.py+=this.vy;\n    }\n  \n    this.limitVelocities=function(){\n      if(this.bLimitVelocities){\n        var speed=sqrt(this.vx*this.vx+this.vy*this.vy);\n        var maxSpeed=10;\n        if(speed>maxSpeed){\n          this.vx*=maxSpeed/speed;this.vy*=maxSpeed/speed;\n        }\n      }\n    }\n  \n    this.inBounds=function(){\n      return(this.px<width&&this.px>0&&this.py<height&&this.py>0);\n    }\n  \n    this.handleBoundaries=function(){\n      var distanceFromCenter = getDistance(width/2, height/2, this.px, this.py)\n      // if(distanceFromCenter > maxRadius){\n      //   this.px = this.px * .999 + width/2 * .001\n      //   this.py = this.py * .999 + height/2 * .001\n      // }\n      // if(distanceFromCenter > maxRadius){\n      //   if(this.px>width/2 + maxRadius)this.vx=-this.vx;\n      //   if(this.px<width/2 - maxRadius)this.vx=-this.vx;\n      //   if(this.py>height/2 + maxRadius)this.vy=-this.vy;\n      //   if(this.py<height/2 - maxRadius)this.vy=-this.vy;      \n      // }\n  \n      // if(distanceFromCenter > maxRadius){\n      //   if(this.px>width/2 + maxRadius)this.px-=maxRadius* 2;\n      //   if(this.px<width/2 - maxRadius)this.px+=maxRadius* 2;\n      //   if(this.py>height/2 + maxRadius)this.py-=maxRadius * 2;\n      //   if(this.py<height/2 - maxRadius)this.py+=maxRadius * 2;     \n      // }\n      if(this.bPeriodicBoundaries){\n        if(this.px>width)this.px-=width;\n        if(this.px<0)this.px+=width;\n        if(this.py>height)this.py-=height;\n        if(this.py<0)this.py+=height;\n      }else if(this.bElasticBoundaries){\n        if(this.px>width)this.vx=-this.vx;\n        if(this.px<0)this.vx=-this.vx;\n        if(this.py>height)this.vy=-this.vy;\n        if(this.py<0)this.vy=-this.vy;\n      }\n    }\n    this.render=function(size){\n      var distance = getDistance(mouseX, mouseY, this.px, this.py)\n      var factor = map(distance, 0, 75, 3, 1)\n      if(distance >= 75){\n        var size = this.size + log(abs(this.vx) * 50)\n      }else{\n        clicked = true\n        var size = (this.size + log(abs(this.vx) * 50)) * factor\n      }\n      var opacity = map(size, 0, 40, 100, 255)\n  \n      // var opacity = map(size, 0, 100, 3, 1)\n      fill(132, 0, 248, opacity)\n  \n      ellipse(this.px,this.py,size,size);\n    }\n  \n}\n\nfunction getDistance(x1, y1, x2, y2){\n  \n    return sqrt((x1 - x2)**2 + (y1 - y2)**2)\n  \n}\n\n\nvar print;\n\n","highlightedLines":{}}